<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

<!-- Hive Configuration can either be stored in this file or in the hadoop configuration files  -->
<!-- that are implied by Hadoop setup variables.                                                -->
<!-- Aside from Hadoop setup variables - this file is provided as a convenience so that Hive    -->
<!-- users do not have to edit hadoop configuration files (that may be managed as a centralized -->
<!-- resource).                                                                                 -->

<!-- Hive Execution Parameters -->
<property>
<name>fs.default.name</name>
<value>hdfs://ns</value>
</property>

<property>
    <name>dfs.nameservices</name>
    <value>ns</value>
 </property>
 <!--for hadoop ha-->
 <property>
         <name>dfs.ha.namenodes.ns</name>
         <value>SVR2368HP360,SVR2369HP360</value>
 </property>
 <!--dfs.namenode.rpc-address.[nameservice ID].-->
 <property>
         <name>dfs.namenode.rpc-address.ns.SVR2368HP360</name>
         <value>SVR2368HP360.hadoop.test.sh.ctriptravel.com:54310</value>
         <!--value>SVR2368HP360:54310</value-->
 </property>
 <property>
         <name>dfs.namenode.rpc-address.ns.SVR2369HP360</name>
         <value>SVR2369HP360.hadoop.test.sh.ctriptravel.com:54310</value>
         <!--value>SVR2369HP360:54310</value-->
 </property>
<!--failover -->
<property>
<name>dfs.client.failover.proxy.provider.ns</name>
<value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
</property>

<property>
  <name>javax.jdo.option.ConnectionURL</name>
  <value>jdbc:mysql://192.168.81.176:3306/hivemeta2db</value>
  <description>JDBC connect string for a JDBC metastore</description>
</property>

<property>
  <name>javax.jdo.option.ConnectionDriverName</name>
  <value>com.mysql.jdbc.Driver</value>
  <description>Driver class name for a JDBC metastore</description>
</property>

<property>
  <name>javax.jdo.option.ConnectionUserName</name>
  <value>root</value>
</property>

<property>
  <name>javax.jdo.option.ConnectionPassword</name>
  <value>qazwsxed</value>
</property>

<property>
  <name>hive.support.concurrency</name>
  <description>Enable Hive's Table Lock Manager Service</description>
  <value>true</value>
</property>

<property>
  <name>hive.zookeeper.quorum</name>
  <value>192.168.81.176,192.168.81.177,192.168.81.178</value>
  <description>Zookeeper quorum used by Hive's Table Lock Manager</description>
</property>

<property>
  <name>hive.metastore.warehouse.dir</name>
  <value>/user/hive/warehouse</value>
  <description>Hive warehouse directory</description>
</property>
<property>
  <name>mapred.job.tracker</name>
  <value>192.168.81.176:8032</value>
</property>
<property>
   <name>io.compression.codecs</name>
      <value>org.apache.hadoop.io.compress.SnappyCodec</value>
</property>
<property>
   <name>mapreduce.output.fileoutputformat.compress.codec</name>
   <value>org.apache.hadoop.io.compress.SnappyCodec</value>
</property>
<property>
   <name>mapreduce.output.fileoutputformat.compress.type</name>
   <value>BLOCK</value>
</property>
<property>
   <name>hive.exec.show.job.failure.debug.info</name>
   <value>true</value>
   <description>
    If a job fails, whether to provide a link in the CLI to the task with the
   most failures, along with debugging hints if applicable.
   </description>
</property>
<property>
   <name>hive.security.authorization.createtable.owner.grants</name>
   <value>ALL</value>
   <description>the privileges automatically granted to the owner whenever a table gets created.
   An example like "select,drop" will grant select and drop privilege to the owner of the table</description>
</property>
<property>
  <name>hive.hwi.listen.host</name>
    <value>0.0.0.0</value>
      <description>This is the host address the Hive Web Interface will listen on</description>
      </property>

<property>
  <name>hive.hwi.listen.port</name>
    <value>9999</value>
      <description>This is the port the Hive Web Interface will listen on</description>
      </property>

<property>
  <name>hive.hwi.war.file</name>
    <value>/lib/hive-hwi-0.10.0-cdh4.6.0.war</value>
      <description>This is the WAR file with the jsp content for Hive Web Interface</description>
</property>

<property>
        <name>hive.aux.jars.path</name>
        <value>file:///usr/lib/hive/lib/hive-hbase-handler-0.10.0-cdh4.6.0.jar,file:///usr/lib/hbase/hbase-0.94.15-cdh4.6.0-security.jar,file:///usr/lib/zookeeper/zookeeper.jar</value>
</property>

<property>
	<name>hbase.zookeeper.quorum</name>
	<value>SVR2368HP360,SVR2369HP360,SVR2370HP360</value>
</property>

<property>
        <name>hive.cli.print.header</name>
        <value>true</value>
</property>

<property>
<name>hive.metastore.execute.setugi</name>
<value>true</value>
<description>In unsecure mode, setting this property to true will cause the metastore to execute DFS operations using the client's reported user and group permissions. Note that this property must be set on both the client and server sides. Further note that its best effort. If client sets its to true and server sets it to false, client setting will be ignored.</description>
</property>

<property>
<name>hive.security.authorization.enabled</name>
<value>true</value>
<description>enable or disable the hive client authorization</description>
</property>

<property>
<name>hive.metastore.authorization.storage.checks</name>
<value>true</value>
</property>
<property>
<name>hive.security.authorization.createtable.owner.grants</name>
<value>ALL</value>
<description>the privileges automatically granted to the owner whenever a table gets created.
An example like "select,drop" will grant select and drop privilege to the owner of the table</description>
</property> 

<property>
  <name>datanucleus.autoCreateSchema</name>
  <value>false</value>
</property>

<!-- <property>
  <name>datanucleus.autoCreateTables</name>
  <value>true</value>
</property>

<property>
  <name>datanucleus.autoCreateColumns</name>
  <value>true</value>
</property>

<property>
  <name>datanucleus.readOnlyDatastore</name>
  <value>false</value>
</property> -->

<property>
  <name>datanucleus.fixedDatastore</name>
  <value>true</value>
</property>

<property>
<name>datanucleus.autoStartMechanism</name>
<value>SchemaTable</value>
</property>
<!--
<property>
  <name>mapreduce.job.queuename</name>
  <value>queue_notReal</value>
</property>
-->

<property>
  <name>hive.metastore.client.socket.timeout</name>
  <value>600</value>
  <description>MetaStore Client socket timeout in seconds</description>
</property>
</configuration>
